{"version":3,"file":"static/js/244.470e492b.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  z-index: 999;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderContainer>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderContainer>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ReviewsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/themoviedbAPI';\nimport Loader from 'components/Loader';\nimport { ReviewsList, ReviewsItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Запит на відгуки (Reviews) фільму по Id\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getMovieReviews = async movieId => {\n      setIsLoading(true);\n      try {\n        const response = await fetchMovieReviews(movieId);\n        const reviews = response.results;\n        if (!reviews.length) {\n          throw new Error('No data! :-(');\n        }\n        setMovieReviews(reviews); // Записуємо в стейт масив обєктів\n      } catch (errorCaught) {\n        setError(errorCaught);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>We don't have any reviews for this movie.</p>}\n\n      <ReviewsList>\n        {movieReviews.map(({ id, author, content }) => (\n          <ReviewsItem key={id}>\n            <p>\n              <b>\n                Author: <em>{author}</em>\n              </b>\n            </p>\n            <p>{content}</p>\n          </ReviewsItem>\n        ))}\n      </ReviewsList>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '4bf150e89573609a4e50188ee97df75b';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day'; // week\nconst LANGUAGE = 'en-US';\n\n// Запит на трендові фільми\nexport async function fetchTrendMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/3/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит на пошук фільму за ключовим словом\nexport async function fetchMovieByName(searchQuery) {\n  const response = await axios.get(\n    `${BASE_URL}/3/search/${MEDIA_TYPE}?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит повної інформації про фільм за Id\nexport async function fetchMovieById(id) {\n  const response = await axios.get(\n    `${BASE_URL}/3/${MEDIA_TYPE}/${id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит на акторський склад (Cast) фільму за Id\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}/3/${MEDIA_TYPE}/${id}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит відгуків (Reviews) про фільм за Id\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}/3/${MEDIA_TYPE}/${id}/reviews?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n"],"names":["LoaderContainer","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","ReviewsList","ReviewsItem","movieId","useParams","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","useEffect","getMovieReviews","fetchMovieReviews","response","reviews","results","length","Error","map","id","author","content","BASE_URL","API_KEY","MEDIA_TYPE","LANGUAGE","fetchTrendMovies","axios","status","data","fetchMovieByName","searchQuery","fetchMovieById","fetchMovieCast"],"sourceRoot":""}