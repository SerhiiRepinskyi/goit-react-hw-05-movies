{"version":3,"file":"static/js/349.e42f3302.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  z-index: 999;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderContainer>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderContainer>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  padding-left: 50px;\n`;\n\nexport const MovieItem = styled.li`\n  & a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  color: black;\n  font-size: 18px;\n  line-height: 1.5;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-bottom 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #2196f3;\n    border-bottom: 2px solid #2196f3;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovieList, MovieItem, MovieLink } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 20px;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 20px;\n\n  font-size: 30px;\n  font-weight: 700;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchTrendMovies } from 'services/themoviedbAPI';\nimport Loader from 'components/Loader';\nimport MoviesList from 'components/MoviesList';\nimport { Section, Title } from './Home.styled';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Запит на трендові фільми\n  useEffect(() => {\n    const getTrendMovies = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetchTrendMovies();\n        if (!response.total_results) {\n          throw new Error('No data! :-(');\n        }\n        setTrendMovies(response.results); // Записуємо в стейт results з API\n      } catch (errorCaught) {\n        setError(errorCaught);\n        // console.error('Error:', errorCaught);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendMovies();\n  }, []);\n\n  return (\n    <Section>\n      <Title>Trending today</Title>\n      {isLoading && <Loader />}\n\n      {error && (\n        <p>\n          Error: {error.message} Sorry, there are not trending movies. Please\n          try again later!\n        </p>\n      )}\n\n      <MoviesList movies={trendMovies} />\n    </Section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '4bf150e89573609a4e50188ee97df75b';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day'; // week\nconst LANGUAGE = 'en-US';\n\n// Запит на трендові фільми\nexport async function fetchTrendMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/3/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит на пошук фільму за ключовим словом\nexport async function fetchMovieByName(searchQuery) {\n  const response = await axios.get(\n    `${BASE_URL}/3/search/${MEDIA_TYPE}?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит повної інформації про фільм за Id\nexport async function fetchMovieById(id) {\n  const response = await axios.get(\n    `${BASE_URL}/3/${MEDIA_TYPE}/${id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит на акторський склад (Cast) фільму за Id\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}/3/${MEDIA_TYPE}/${id}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит відгуків (Reviews) про фільм за Id\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}/3/${MEDIA_TYPE}/${id}/reviews?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n"],"names":["LoaderContainer","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","MovieList","MovieItem","MovieLink","Link","movies","location","useLocation","map","id","title","to","state","from","Section","Title","useState","trendMovies","setTrendMovies","isLoading","setIsLoading","error","setError","useEffect","getTrendMovies","fetchTrendMovies","response","total_results","Error","results","message","MoviesList","BASE_URL","API_KEY","MEDIA_TYPE","LANGUAGE","axios","status","data","fetchMovieByName","searchQuery","fetchMovieById","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}