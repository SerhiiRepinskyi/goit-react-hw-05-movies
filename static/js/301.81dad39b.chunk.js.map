{"version":3,"file":"static/js/301.81dad39b.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  z-index: 999;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderContainer>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderContainer>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCardContainer = styled.div`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const MovieImg = styled.img`\n  width: 300px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 12px;\n  list-style: none;\n`;\n\nexport const MovieMoreInform = styled.div`\n  text-align: center;\n  font-size: 16px;\n  font-weight: 600;\n\n  padding: 20px 0;\n  border-top: 1px solid #d3d3d3;\n  border-bottom: 1px solid #d3d3d3;\n\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const MoreInformList = styled.ul`\n  display: flex;\n  gap: 60px;\n  justify-content: center;\n\n  padding-top: 20px;\n  list-style: none;\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: block;\n  width: 80px;\n\n  cursor: pointer;\n\n  padding: 6px 12px;\n\n  color: #010101;\n  font-size: 16px;\n  font-weight: 600;\n  text-decoration: none;\n  background-color: #79caea;\n\n  border: none;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.24) 8px 8px 5px 0px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: #ade0f4;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  MovieCardContainer,\n  MovieImg,\n  MovieInfo,\n  GenresList,\n  MovieMoreInform,\n  MoreInformList,\n  LinkStyled,\n} from './MovieCard.styled';\nimport { FaRegFileImage } from 'react-icons/fa';\n\nconst MovieCard = ({ selectedMovieData }) => {\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    selectedMovieData;\n\n  // Перевірка валідності дати\n  // Не число(isNaN): так - Unknown; ні (тобто число) - повертає рік\n  const releaseDate = new Date(release_date);\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n  // Без перевірки валідності дати\n  // const releaseYear = new Date(release_date).getFullYear();\n\n  // Перевірка на наявність рейтингу, округлення до цілого\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n  return (\n    <>\n      <MovieCardContainer>\n        {poster_path ? (\n          <MovieImg\n            src={`https://image.tmdb.org/t/p/w400/${poster_path}`}\n            alt={title}\n            width=\"300\"\n          />\n        ) : (\n          <FaRegFileImage\n            style={{ display: 'block', width: '400px' }}\n            color=\"rgb(60 80 60 )\"\n            size={400}\n          />\n        )}\n\n        <MovieInfo>\n          <h1>\n            {title ?? 'Unknown'} ({releaseYear ?? releaseYear})\n          </h1>\n          <p>User score: {userScore}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n          </GenresList>\n        </MovieInfo>\n      </MovieCardContainer>\n\n      <MovieMoreInform>\n        <p>Additional information</p>\n\n        <MoreInformList>\n          <li>\n            <LinkStyled to=\"cast\">Cast</LinkStyled>\n          </li>\n          <li>\n            <LinkStyled to=\"reviews\">Reviews</LinkStyled>\n          </li>\n        </MoreInformList>\n      </MovieMoreInform>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  selectedMovieData: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 20px;\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: block;\n  width: 60px;\n  margin-bottom: 20px;\n\n  cursor: pointer;\n\n  padding: 6px 12px;\n\n  color: #010101;\n  font-size: 16px;\n  font-weight: 600;\n  text-align: center;\n  text-decoration: none;\n  background-color: #79caea;\n\n  border: none;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.24) 8px 8px 5px 0px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: #ade0f4;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { fetchMovieById } from 'services/themoviedbAPI';\nimport Loader from 'components/Loader';\nimport MovieCard from 'components/MovieCard';\nimport { Section, LinkStyled } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? `/`);\n\n  // Запит фільму по Id\n  useEffect(() => {\n    const getMovieById = async movieId => {\n      setIsLoading(true);\n      try {\n        const movieData = await fetchMovieById(movieId);\n        if (!movieData) {\n          throw new Error('No data! :-(');\n        }\n        setMovieData(movieData); // Записуємо в стейт обєкт з даними\n      } catch (errorCaught) {\n        setError(errorCaught);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (movieId) {\n      getMovieById(movieId);\n    }\n  }, [movieId]);\n\n  return (\n    <Section>\n      {/* Link для повернення на попередню сторінку */}\n      {/* Без використання useRef: to={location?.state?.from ?? '/'} */}\n      <LinkStyled to={backLinkHref.current}>Go back</LinkStyled>\n\n      {isLoading && <Loader />}\n      {error && (\n        <div>\n          Error: {error.message}. Sorry, there is no data for the selected\n          movie.\n        </div>\n      )}\n\n      {/* Картка для відображення вибраного фільму */}\n      <MovieCard selectedMovieData={movieData} />\n\n      {/* Рендеринг дочірніх компонентів лише за потреби*/}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '4bf150e89573609a4e50188ee97df75b';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day'; // week\nconst LANGUAGE = 'en-US';\n\n// Запит на трендові фільми\nexport async function fetchTrendMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/3/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит на пошук фільму за ключовим словом\nexport async function fetchMovieByName(searchQuery) {\n  const response = await axios.get(\n    `${BASE_URL}/3/search/${MEDIA_TYPE}?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит повної інформації про фільм за Id\nexport async function fetchMovieById(id) {\n  const response = await axios.get(\n    `${BASE_URL}/3/${MEDIA_TYPE}/${id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит на акторський склад (Cast) фільму за Id\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}/3/${MEDIA_TYPE}/${id}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n\n// Запит відгуків (Reviews) про фільм за Id\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}/3/${MEDIA_TYPE}/${id}/reviews?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (!response.status) {\n    throw new Error(response.status);\n  }\n  return response.data;\n}\n"],"names":["LoaderContainer","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","MovieCardContainer","MovieImg","MovieInfo","GenresList","MovieMoreInform","MoreInformList","LinkStyled","Link","selectedMovieData","title","poster_path","release_date","vote_average","overview","genres","releaseDate","Date","releaseYear","isNaN","getFullYear","userScore","toFixed","src","alt","style","display","color","size","map","id","name","to","Section","movieId","useParams","useState","movieData","setMovieData","isLoading","setIsLoading","error","setError","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovieById","fetchMovieById","Error","current","message","Suspense","fallback","BASE_URL","API_KEY","MEDIA_TYPE","LANGUAGE","fetchTrendMovies","axios","response","status","data","fetchMovieByName","searchQuery","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}